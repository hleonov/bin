#!/usr/bin/perl

# this sciprt takes a vmd file generated by hole that looks like this:
# draw color red draw triangle  {   -0.867   -1.220    1.157 }  {   -1.046   -1.112    1.206 }  {   -1.030   -1.129    1.253 }  
# and then makes a gredation of colors beyond the 3 permitted colors.
# it does so as follows: each vmd command is a triangle
# containing 3 points defining the tirnagle points.
# the pore is alinged on the z axis.
# so calcualte the geometircal mean of every triangel and calcualte the 
# maximal distance between it and every tringel

# rember that is the pore values are ouside the range then they will
# in the color which is the maximum

# define some simple parameters
$number_of_colors = 1000;
if($ARGV[1]){
  $pore_max = $ARGV[1];
}
else{
  $pore_max = 15;
}
if($ARGV[2]){
  $pore_min = $ARGV[2];
}
else{
  $pore_min = 2;
}
$number_of_slices = 50;
# set initial values on some constants
$min =  10000000;
$max = -10000000;
# print our the color for vmd
&print_colors_hue;
# now run the program
open (IN,$ARGV[0]) || die "File \"$ARGV[0]\" doesn't not exist";
while(<IN>){
  if (/^draw triangle.{3}(.{9})(.{9})(.{9}).{5}(.{9})(.{9})(.{9}).{5}(.{9})(.{9})(.{9}).+/){
    $i++; # starts from 1 not 0
    $x1[$i] = $1; 
    $y1[$i] = $2; 
    $z1[$i] = $3; 
    $x2[$i] = $4; 
    $y2[$i] = $5; 
    $z2[$i] = $6; 
    $x3[$i] = $7; 
    $y3[$i] = $8; 
    $z3[$i] = $9; 
    $x1[$i] =~ s/\s//g;
    $y1[$i] =~ s/\s//g;
    $z1[$i] =~ s/\s//g;
    $x2[$i] =~ s/\s//g;
    $y2[$i] =~ s/\s//g;
    $z2[$i] =~ s/\s//g;
    $x3[$i] =~ s/\s//g;
    $y3[$i] =~ s/\s//g;
    $z3[$i] =~ s/\s//g;
    # calcualte the average of every triangle and store in a array
    $x[$i] = ($x1[$i] + $x2[$i] + $x3[$i])/3;
    $y[$i] = ($y1[$i] + $y2[$i] + $y3[$i])/3;
    $z[$i] = ($z1[$i] + $z2[$i] + $z3[$i])/3;
    if($z[$i] > $max){
      $max = $z[$i];
    }
    if($z[$i] < $min){
      $min = $z[$i];
    }
  }
}
# remember the number of triangles
$number_of_triangles = $i;
# calcualte the length of the pore
$length = $max - $min;
$length_of_slice = $length / $number_of_slices;
# parse it into slices and assign each trible into a slice
# this is not elegnet but it works
for ($i = 0; $i < $number_of_slices; $i++){
  # this defines the top and bottom z
  $min_z = $min + ($i * $length_of_slice);
  $max_z = $min_z + $length_of_slice;
  undef(@slice);
  # this is how many traingels are in the slice. 
  # it needs to be zeroed before every slice
  $number_in_slice = 0; 
  # now run through the entire list of trinagles to assign them
  for($j = 1; $j <= $number_of_triangles; $j++){
    if($min_z <= $z[$j] && $z[$j] <= $max_z){ # its in this slice!
      # this remebers the counter to access all of the coordinates
      $slice[$number_in_slice] = $j; 
      # increment the number in slice counter
      $number_in_slice++;
    }
  }
  #print "$i $min_z $max_z $number_in_slice\n";
  # now analyze the slice
  # calculate the center of each slice
  $center_x = 0;
  $center_y = 0;
  $center_z = 0;
  for($k = 0; $k <= $number_in_slice; $k++ ){
    $center_x += $x[$slice[$k]];
    $center_y += $y[$slice[$k]];
    $center_z += $z[$slice[$k]];
  }
  $center_x /= ($number_in_slice+1);
  $center_y /= ($number_in_slice+1);
  $center_z /= ($number_in_slice+1);
  # calcualte the distance from the center to the triangle
  for($k = 0; $k <= $number_in_slice; $k++ ){
    $pore_size = sqrt(($x[$slice[$k]]-$center_x)**2+($y[$slice[$k]]-$center_y)**2+($z[$slice[$k]]-$center_z)**2);
    $pore_size *= 2; # to get the diameter
    $pore_color = &get_color;
    #print "$pore_size\n";
    print "draw color $pore_color\n";
    print "draw triangle  {";
    printf ("%9.3f%9.3f%9.3f",$x1[$slice[$k]],$y1[$slice[$k]],$z1[$slice[$k]]);
    print " }  {";
    printf ("%9.3f%9.3f%9.3f",$x2[$slice[$k]],$y2[$slice[$k]],$z2[$slice[$k]]);
    print " }  {";
    printf ("%9.3f%9.3f%9.3f",$x3[$slice[$k]],$y3[$slice[$k]],$z3[$slice[$k]]);
    print " }\n";
  }  
}



sub get_color {
  # this subroutine returns a color number as a function
  # of the pore size ($pore_size). The color aer predefined above
  # they range from 17 to 17 + number of colors (e.g. 1017)
  
  $tmp = ($pore_size - $pore_min) / ($pore_max - $pore_min);
  if ($tmp > 1){
    $tmp = 1
  }
  if($tmp < 0){
    $tmp = 0;
  }
  return  (($tmp * $number_of_colors) + 17);
  

}

sub print_colors_rgb {
  # red down
  # green up
  # blue zero
  for ($i = 0; $i <= $number_of_colors / 2; $i++){
    $green =  $i / ($number_of_colors / 2);
    $red = 1 - $green;
    $color = $i + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color $red $green 0.0\n";
  }
  # red zero
  # green down
  # blue up
  for ($i = 0 / 2; $i <= $number_of_colors / 2; $i++){
    $blue = $i / ($number_of_colors / 2);
    $green =  1 - $blue;
    $color = $i + ($number_of_colors / 2) + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color 0.0 $green $blue\n";
  }
}

sub print_colors_hue {
  # going up => $i / ($number_of_colors / 5)
  # going down => 1 - ($i / ($number_of_colors / 5))
  
  # red to yellow 100->110
  for ($i = 0; $i <= $number_of_colors / 5; $i++){
    $red = 1;
    $green =  $i / ($number_of_colors / 5);
    $blue = 0;
    $color = $i + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color $red $green $blue\n";
  }
  # yellow to green 110->010
  for ($i = 0; $i <= $number_of_colors / 5; $i++){
    $red = 1 - ($i / ($number_of_colors / 5));
    $green =  1;
    $blue = 0;
    $color = $i + (1 * $number_of_colors / 5) + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color $red $green $blue\n";
  }
  # green to cyan 010->011
  for ($i = 0; $i <= $number_of_colors / 5; $i++){
    $red = 0;
    $green = 1;
    $blue = $i / ($number_of_colors / 5);
    $color = $i + (2 * $number_of_colors / 5) + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color $red $green $blue\n";
  }
  # cyan to blue 011->001
  for ($i = 0; $i <= $number_of_colors / 5; $i++){
    $red = 0;
    $green =  1 - ($i / ($number_of_colors / 5));
    $blue = 1;
    $color = $i + (3 * $number_of_colors / 5) + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color $red $green $blue\n";
  }
  # blue to magenta 001->101
  for ($i = 0; $i <= $number_of_colors / 5; $i++){
    $red = $i / ($number_of_colors / 5);
    $green =  0;
    $blue = 1;
    $color = $i + (4 * $number_of_colors / 5) + 17; # there are 0-16 color predefined in vmd
    print "color change rgb $color $red $green $blue\n";
  }
}




